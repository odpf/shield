syntax = "proto3";
package odpf.shield.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/odpf/proton/shield/v1;shieldv1";
option java_package = "io.odpf.proton.shield.v1";
option java_outer_classname = "Shield";


// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Shield",
    version: "0.1.0";
  };
  schemes: HTTP;
};

service ShieldService {
  // Users
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get All Users";
    };
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/users",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Create User";
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get a User by id";
    };
  }

  rpc GetCurrentUser(GetCurrentUserRequest) returns (GetCurrentUserResponse) {
    option (google.api.http) = {
      get: "/v1/users/self",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Get current user";
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Update User by ID";
    };
  }

  rpc UpdateCurrentUser(UpdateCurrentUserRequest) returns (UpdateCurrentUserResponse) {
    option (google.api.http) = {
      put: "/v1/users/self",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User";
      summary: "Update current User";
    };
  }

  // Group
  rpc ListGroups(ListGroupsRequest) returns (ListGroupsResponse) {
    option (google.api.http) = {
      get: "/v1/groups",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get all Groups";
    };
  }

  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {
    option (google.api.http) = {
      post: "/v1/groups",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Create Group";
    };
  }

  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse) {
    option (google.api.http) = {
      get: "/v1/groups/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get Group by ID";
    };
  }

  rpc ListGroupUsers(ListGroupUsersRequest) returns (ListGroupUsersResponse) {
    option (google.api.http) = {
      get: "/v1/groups/{id}/users",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Get all Users in a Group";
    };
  }

  rpc UpdateGroup(UpdateGroupRequest) returns (UpdateGroupResponse) {
    option (google.api.http) = {
      put: "/v1/groups/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Group";
      summary: "Update Group by ID";
    };
  }

  // Roles
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get: "/v1/roles",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Get all Roles";
    };
  }

  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post: "/v1/roles",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Create Role";
    };
  }

  rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
    option (google.api.http) = {
      get: "/v1/roles/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Get Role by ID";
    };
  }

  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
    option (google.api.http) = {
      put: "/v1/roles/{id}",
      body: "body";
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Role";
      summary: "Update Role by ID";
    };
  }

  // Organizations
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (google.api.http) = {
      get: "/v1/organizations"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Get all Organization";
    };
  }

  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (google.api.http) = {
      post: "/v1/organizations",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Create Organization";
    };
  }

  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {
    option (google.api.http) = {
      get: "/v1/organizations/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Get Organization by ID";
    };
  }

  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {
    option (google.api.http) = {
      put: "/v1/organizations/{id}",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization";
      summary: "Update Organization by ID";
    };
  }

  // Projects
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse) {
    option (google.api.http) = {
      get: "/v1/projects"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Get all Project";
    };
  }

  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post: "/v1/projects",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Create Project";
    };
  }

  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      get: "/v1/projects/{id}",
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Get Project by ID";
    };
  }

  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      put: "/v1/projects/{id}",
      body: "body"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Project";
      summary: "Update Project by ID";
    };
  }

}

message UserRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string email = 2 [(validate.rules).string.email = true];
  google.protobuf.Struct metadata = 3;
}

message CreateUserRequest {
  UserRequestBody body = 1;
}

message User {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  string email = 4 [(validate.rules).string.email = true];
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserResponse {
  User user = 1;
}

message GetCurrentUserResponse {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

message UpdateCurrentUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  UserRequestBody body = 2;
}

message GetUserRequest {
  string id = 1;
}

message GetCurrentUserRequest {
}

message ListUsersRequest {
  google.protobuf.Struct fields = 1;
}

message ListUsersResponse {
  repeated User users = 1;
}

message GroupRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateGroupRequest {
  GroupRequestBody body = 1;
}

message Group {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  repeated User admins = 4;
  bool is_member = 5;
  int32 member_count = 6;
  string org_id = 7;
  google.protobuf.Struct metadata = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message CreateGroupResponse {
  Group group = 1;
}

message GetGroupResponse {
  Group group = 1;
}

message UpdateGroupResponse {
  Group group = 1;
}

message ListGroupUsersResponse {
  repeated User users = 1;
}

message UpdateGroupRequest {
  string id = 1;
  GroupRequestBody body = 2;
}

message UpdateCurrentUserRequest {
  GroupRequestBody body = 1;
}

message GetGroupRequest {
  string id = 1;
}

message ListGroupUsersRequest {
  string id = 1;
}

message ListGroupsRequest {
  string user_id = 1;
}

message ListGroupsResponse {
  repeated Group groups = 1;
}

message Role {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  repeated string tags = 3;
  repeated string actions = 4;
  google.protobuf.Struct metadata = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message RoleRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  repeated string tags = 2;
  repeated string actions = 3;
  google.protobuf.Struct metadata = 4;
}

message CreateRoleRequest {
  RoleRequestBody body = 1;
}

message CreateRoleResponse {
  Role role = 1;
}

message GetRoleResponse {
  Role role = 1;
}

message UpdateRoleResponse {
  Role role = 1;
}

message GetRoleRequest {
  string id = 1;
}

message UpdateRoleRequest {
  string id = 1;
  RoleRequestBody body = 2;
}

message ListRolesRequest {
}

message ListRolesResponse {
  repeated Role roles = 1;
}

message OrganizationRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateOrganizationRequest {
  OrganizationRequestBody body = 1;
}

message Organization {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message GetOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

message ListOrganizationsRequest {
}

message ListOrganizationsResponse {
  repeated Organization organizations = 1;
}

message GetOrganizationRequest {
  string id = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  OrganizationRequestBody body = 2;
}

message ProjectRequestBody {
  string name = 1 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 2;
  google.protobuf.Struct metadata = 3;
}

message CreateProjectRequest {
  ProjectRequestBody body = 1;
}

message Project {
  string id = 1;
  string name = 2 [(validate.rules).string.pattern = "^[A-Za-z0-9_-]+$"];
  string slug = 3;
  google.protobuf.Struct metadata = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message CreateProjectResponse {
  Project project = 1;
}

message GetProjectResponse {
  Project project = 1;
}

message UpdateProjectResponse {
  Project project = 1;
}

message ListProjectsRequest {
}

message ListProjectsResponse {
  repeated Project projects = 1;
}

message GetProjectRequest {
  string id = 1;
}

message UpdateProjectRequest {
  string id = 1;
  ProjectRequestBody body = 2;
}
