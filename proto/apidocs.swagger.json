{
  "swagger": "2.0",
  "info": {
    "title": "Shield Administration API",
    "version": "0.2.0"
  },
  "tags": [
    {
      "name": "AdminService"
    },
    {
      "name": "ShieldService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1beta1/admin/groups": {
      "get": {
        "summary": "Get all groups",
        "operationId": "AdminService_ListGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/admin/organizations": {
      "get": {
        "summary": "Get all organization",
        "operationId": "AdminService_ListAllOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListAllOrganizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/admin/projects": {
      "get": {
        "summary": "Get all project",
        "operationId": "AdminService_ListProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/admin/relations": {
      "get": {
        "summary": "Get all relations",
        "operationId": "AdminService_ListRelations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListRelationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Relation"
        ]
      }
    },
    "/v1beta1/admin/resources": {
      "get": {
        "summary": "Get all resources",
        "operationId": "AdminService_ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/v1beta1/admin/users": {
      "get": {
        "summary": "Get all users",
        "operationId": "AdminService_ListAllUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListAllUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/auth": {
      "get": {
        "summary": "Authn",
        "operationId": "ShieldService_ListAuthStrategies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListAuthStrategiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ShieldService"
        ]
      }
    },
    "/v1beta1/auth/callback": {
      "get": {
        "operationId": "ShieldService_AuthCallback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthCallbackResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "strategyName",
            "description": "strategy_name will not be set for oidc but can be utilized for methods like email magic links",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "for oidc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ShieldService"
        ]
      },
      "post": {
        "operationId": "ShieldService_AuthCallback2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthCallbackResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "strategyName",
            "description": "strategy_name will not be set for oidc but can be utilized for methods like email magic links",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "for oidc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ShieldService"
        ]
      }
    },
    "/v1beta1/auth/logout": {
      "get": {
        "operationId": "ShieldService_AuthLogout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ShieldService"
        ]
      },
      "delete": {
        "operationId": "ShieldService_AuthLogout2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthLogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ShieldService"
        ]
      }
    },
    "/v1beta1/auth/register/{strategyName}": {
      "get": {
        "operationId": "ShieldService_Authenticate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "strategyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect",
            "description": "by default, location header for redirect if applicable\nwill be skipped unless this is set to true, useful in browser",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "returnTo",
            "description": "be default, after successful authentication no operation will be performed\nto apply redirection in case of browsers, provide a url that will be used\nfor redirection after authentication",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ShieldService"
        ]
      },
      "post": {
        "operationId": "ShieldService_Authenticate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "strategyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "redirect",
            "description": "by default, location header for redirect if applicable\nwill be skipped unless this is set to true, useful in browser",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "returnTo",
            "description": "be default, after successful authentication no operation will be performed\nto apply redirection in case of browsers, provide a url that will be used\nfor redirection after authentication",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ShieldService"
        ]
      }
    },
    "/v1beta1/check": {
      "post": {
        "summary": "check permission on a resource of an user",
        "operationId": "ShieldService_CheckResourcePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CheckResourcePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CheckResourcePermissionRequest"
            }
          }
        ],
        "tags": [
          "Authz"
        ]
      }
    },
    "/v1beta1/meta/schemas": {
      "get": {
        "summary": "Get all Metadata Schemas",
        "operationId": "ShieldService_ListMetaSchemas",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListMetaSchemasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "MetaSchema"
        ]
      },
      "post": {
        "summary": "Create Metadata Schema",
        "operationId": "ShieldService_CreateMetaSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateMetaSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1MetaSchemaRequestBody"
            }
          }
        ],
        "tags": [
          "MetaSchema"
        ]
      }
    },
    "/v1beta1/meta/schemas/{id}": {
      "get": {
        "summary": "Get MetaSchema by ID",
        "operationId": "ShieldService_GetMetaSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetMetaSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MetaSchema"
        ]
      },
      "delete": {
        "summary": "Delete a MetaSchema permanently",
        "operationId": "ShieldService_DeleteMetaSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteMetaSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "MetaSchema"
        ]
      },
      "put": {
        "summary": "Update MetaSchema by ID",
        "operationId": "ShieldService_UpdateMetaSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateMetaSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1MetaSchemaRequestBody"
            }
          }
        ],
        "tags": [
          "MetaSchema"
        ]
      }
    },
    "/v1beta1/namespaces": {
      "get": {
        "summary": "Get all Namespaces",
        "operationId": "ShieldService_ListNamespaces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNamespacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Namespace"
        ]
      },
      "post": {
        "summary": "Create Namespace",
        "operationId": "ShieldService_CreateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1NamespaceRequestBody"
            }
          }
        ],
        "tags": [
          "Namespace"
        ]
      }
    },
    "/v1beta1/namespaces/{id}": {
      "get": {
        "summary": "Get Namespace by ID",
        "operationId": "ShieldService_GetNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Namespace"
        ]
      },
      "put": {
        "summary": "Update Namespace by ID",
        "operationId": "ShieldService_UpdateNamespace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1NamespaceRequestBody"
            }
          }
        ],
        "tags": [
          "Namespace"
        ]
      }
    },
    "/v1beta1/object/{objectNamespace}/{objectId}/subject/{subjectNamespace}/{subjectId}/relation/{relation}": {
      "delete": {
        "summary": "Remove a subject having a relation from an object",
        "operationId": "ShieldService_DeleteRelation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteRelationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "objectNamespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subjectNamespace",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subjectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "relation",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Relation"
        ]
      }
    },
    "/v1beta1/organizations": {
      "get": {
        "summary": "Get all organization",
        "operationId": "ShieldService_ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "post": {
        "summary": "Create organization",
        "operationId": "ShieldService_CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1OrganizationRequestBody"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{body.orgId}/groups": {
      "post": {
        "summary": "Create Group",
        "operationId": "ShieldService_CreateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{body.orgId}/groups/{id}": {
      "put": {
        "summary": "Update Group by ID",
        "operationId": "ShieldService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{body.orgId}/roles": {
      "post": {
        "summary": "Create Role",
        "operationId": "ShieldService_CreateOrganizationRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateOrganizationRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/organizations/{body.orgId}/roles/{id}": {
      "put": {
        "summary": "Update Role by ID",
        "operationId": "ShieldService_UpdateOrganizationRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateOrganizationRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "permissions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/organizations/{id}": {
      "get": {
        "summary": "Get Organization by ID or slug",
        "operationId": "ShieldService_GetOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "delete": {
        "summary": "Delete an organization permanently forever and all of its relations",
        "operationId": "ShieldService_DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      },
      "put": {
        "summary": "Update Organization by ID",
        "operationId": "ShieldService_UpdateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1OrganizationRequestBody"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{id}/admins": {
      "get": {
        "summary": "Get all Admins of an Organization",
        "operationId": "ShieldService_ListOrganizationAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationAdminsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{id}/disable": {
      "post": {
        "summary": "Disable an organization",
        "operationId": "ShieldService_DisableOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DisableOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{id}/enable": {
      "post": {
        "summary": "Enable an Organization",
        "operationId": "ShieldService_EnableOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EnableOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{id}/projects": {
      "get": {
        "summary": "Get all projects that belong to an organization",
        "operationId": "ShieldService_ListOrganizationProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{id}/users": {
      "get": {
        "summary": "List Organization users",
        "operationId": "ShieldService_ListOrganizationUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissionFilter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organization"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/groups": {
      "get": {
        "summary": "Create Group",
        "operationId": "ShieldService_ListOrganizationGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/groups/{id}": {
      "get": {
        "summary": "Get Group by ID",
        "operationId": "ShieldService_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      },
      "delete": {
        "summary": "Delete a Group permanently forever and all of its relations",
        "operationId": "ShieldService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/groups/{id}/disable": {
      "post": {
        "summary": "Disable a Group",
        "operationId": "ShieldService_DisableGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DisableGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/groups/{id}/enable": {
      "post": {
        "summary": "Enable a Group",
        "operationId": "ShieldService_EnableGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EnableGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/groups/{id}/users": {
      "get": {
        "summary": "Get all users for a group",
        "operationId": "ShieldService_ListGroupUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListGroupUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Group"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/roles": {
      "get": {
        "summary": "Get custom roles under an org",
        "operationId": "ShieldService_ListOrganizationRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListOrganizationRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/organizations/{orgId}/roles/{id}": {
      "get": {
        "summary": "Get Role by ID",
        "operationId": "ShieldService_GetOrganizationRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetOrganizationRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      },
      "delete": {
        "summary": "Delete a role permanently forever and all of its relations",
        "operationId": "ShieldService_DeleteOrganizationRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteOrganizationRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/permissions": {
      "get": {
        "summary": "Get all Permissions",
        "operationId": "ShieldService_ListPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListPermissionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Permission"
        ]
      },
      "post": {
        "summary": "Create Permission",
        "operationId": "ShieldService_CreatePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreatePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1PermissionRequestBody"
            }
          }
        ],
        "tags": [
          "Permission"
        ]
      }
    },
    "/v1beta1/permissions/{id}": {
      "get": {
        "summary": "Get Permission by ID",
        "operationId": "ShieldService_GetPermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Permission"
        ]
      },
      "delete": {
        "summary": "Delete Permission by ID",
        "operationId": "ShieldService_DeletePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeletePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Permission"
        ]
      },
      "put": {
        "summary": "Update Permission by ID",
        "operationId": "ShieldService_UpdatePermission",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdatePermissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1PermissionRequestBody"
            }
          }
        ],
        "tags": [
          "Permission"
        ]
      }
    },
    "/v1beta1/policies": {
      "get": {
        "summary": "Get all policies",
        "operationId": "AdminService_ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListPoliciesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "post": {
        "summary": "Create Policy",
        "operationId": "ShieldService_CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreatePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1PolicyRequestBody"
            }
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/v1beta1/policies/{id}": {
      "get": {
        "summary": "Get Policy by ID",
        "operationId": "ShieldService_GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "delete": {
        "summary": "Delete a policy permanently forever and all of its relations",
        "operationId": "ShieldService_DeletePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeletePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "put": {
        "summary": "Update Policy by ID",
        "operationId": "ShieldService_UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdatePolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1PolicyRequestBody"
            }
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/v1beta1/projects": {
      "post": {
        "summary": "Create Project",
        "operationId": "ShieldService_CreateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ProjectRequestBody"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{body.projectId}/resources": {
      "post": {
        "summary": "Create Resource",
        "operationId": "ShieldService_CreateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespaceId": {
                  "type": "string"
                },
                "relations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1beta1Relation"
                  }
                },
                "userId": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/v1beta1/projects/{body.projectId}/resources/{id}": {
      "put": {
        "summary": "Update Resource by ID",
        "operationId": "ShieldService_UpdateResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespaceId": {
                  "type": "string"
                },
                "relations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/definitions/v1beta1Relation"
                  }
                },
                "userId": {
                  "type": "string"
                },
                "metadata": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/v1beta1/projects/{id}": {
      "get": {
        "summary": "Get Project by ID",
        "operationId": "ShieldService_GetProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "delete": {
        "summary": "Delete a Project permanently forever and all of its relations",
        "operationId": "ShieldService_DeleteProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      },
      "put": {
        "summary": "Update Project by ID",
        "operationId": "ShieldService_UpdateProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ProjectRequestBody"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{id}/admins": {
      "get": {
        "summary": "Get all Admins of a Project",
        "operationId": "ShieldService_ListProjectAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectAdminsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{id}/disable": {
      "post": {
        "summary": "Disable a Project",
        "operationId": "ShieldService_DisableProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DisableProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{id}/enable": {
      "post": {
        "summary": "Enable a Project",
        "operationId": "ShieldService_EnableProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EnableProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{id}/users": {
      "get": {
        "summary": "Get all users of a Project",
        "operationId": "ShieldService_ListProjectUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "permissionFilter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Project"
        ]
      }
    },
    "/v1beta1/projects/{projectId}/resources": {
      "get": {
        "summary": "Get all resources",
        "operationId": "ShieldService_ListProjectResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListProjectResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespaceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/v1beta1/projects/{projectId}/resources/{id}": {
      "get": {
        "summary": "Get Resource by ID",
        "operationId": "ShieldService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      },
      "delete": {
        "summary": "Delete a resource permanently forever",
        "operationId": "ShieldService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Resource"
        ]
      }
    },
    "/v1beta1/relations": {
      "post": {
        "summary": "Create Relation",
        "operationId": "ShieldService_CreateRelation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateRelationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RelationRequestBody"
            }
          }
        ],
        "tags": [
          "Relation"
        ]
      }
    },
    "/v1beta1/relations/{id}": {
      "get": {
        "summary": "Get Relation by ID",
        "operationId": "ShieldService_GetRelation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetRelationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Relation"
        ]
      }
    },
    "/v1beta1/roles": {
      "get": {
        "summary": "List all pre-defined roles",
        "operationId": "ShieldService_ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Role"
        ]
      },
      "post": {
        "summary": "Create platform wide role",
        "operationId": "AdminService_CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RoleRequestBody"
            }
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/roles/{id}": {
      "delete": {
        "summary": "Delete a role permanently forever and all of its relations",
        "operationId": "AdminService_DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteRoleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Role"
        ]
      }
    },
    "/v1beta1/users": {
      "get": {
        "summary": "Get all public users",
        "operationId": "ShieldService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "post": {
        "summary": "Create user",
        "operationId": "ShieldService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UserRequestBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/self": {
      "get": {
        "summary": "Get current user",
        "operationId": "ShieldService_GetCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update current User",
        "operationId": "ShieldService_UpdateCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UserRequestBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/self/groups": {
      "get": {
        "summary": "List groups of a User",
        "operationId": "ShieldService_ListCurrentUserGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListCurrentUserGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/self/organizations": {
      "get": {
        "summary": "Get all organizations a user belongs to",
        "operationId": "ShieldService_GetOrganizationsByCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetOrganizationsByCurrentUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/{id}": {
      "get": {
        "summary": "Get a user by id",
        "operationId": "ShieldService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Delete an user permanently forever and all of its relations",
        "operationId": "ShieldService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update User by ID",
        "operationId": "ShieldService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UserRequestBody"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/{id}/disable": {
      "post": {
        "summary": "Disable a user",
        "operationId": "ShieldService_DisableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DisableUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/{id}/enable": {
      "post": {
        "summary": "Enable a user",
        "operationId": "ShieldService_EnableUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1EnableUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/{id}/groups": {
      "get": {
        "summary": "List Groups of a User",
        "operationId": "ShieldService_ListUserGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListUserGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/v1beta1/users/{id}/organizations": {
      "get": {
        "summary": "Get all organizations a user belongs to",
        "operationId": "ShieldService_GetOrganizationsByUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetOrganizationsByUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "User"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1AuthCallbackResponse": {
      "type": "object"
    },
    "v1beta1AuthLogoutResponse": {
      "type": "object"
    },
    "v1beta1AuthStrategy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      }
    },
    "v1beta1AuthenticateResponse": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        }
      }
    },
    "v1beta1CheckResourcePermissionRequest": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "objectNamespace": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        }
      }
    },
    "v1beta1CheckResourcePermissionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        }
      }
    },
    "v1beta1CreateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1beta1Group"
        }
      }
    },
    "v1beta1CreateMetaSchemaResponse": {
      "type": "object",
      "properties": {
        "metaschema": {
          "$ref": "#/definitions/v1beta1MetaSchema"
        }
      }
    },
    "v1beta1CreateNamespaceResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1CreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1beta1Organization"
        }
      }
    },
    "v1beta1CreateOrganizationRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1beta1Role"
        }
      }
    },
    "v1beta1CreatePermissionResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/v1beta1Permission"
        }
      }
    },
    "v1beta1CreatePolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1beta1Policy"
        }
      }
    },
    "v1beta1CreateProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1beta1Project"
        }
      }
    },
    "v1beta1CreateRelationResponse": {
      "type": "object",
      "properties": {
        "relation": {
          "$ref": "#/definitions/v1beta1Relation"
        }
      }
    },
    "v1beta1CreateResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1beta1Resource"
        }
      }
    },
    "v1beta1CreateRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1beta1Role"
        }
      }
    },
    "v1beta1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1beta1User"
        }
      }
    },
    "v1beta1DeleteGroupResponse": {
      "type": "object"
    },
    "v1beta1DeleteMetaSchemaResponse": {
      "type": "object"
    },
    "v1beta1DeleteOrganizationResponse": {
      "type": "object"
    },
    "v1beta1DeleteOrganizationRoleResponse": {
      "type": "object"
    },
    "v1beta1DeletePermissionResponse": {
      "type": "object"
    },
    "v1beta1DeletePolicyResponse": {
      "type": "object"
    },
    "v1beta1DeleteProjectResponse": {
      "type": "object"
    },
    "v1beta1DeleteRelationResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "v1beta1DeleteResourceResponse": {
      "type": "object"
    },
    "v1beta1DeleteRoleResponse": {
      "type": "object"
    },
    "v1beta1DeleteUserResponse": {
      "type": "object"
    },
    "v1beta1DisableGroupResponse": {
      "type": "object"
    },
    "v1beta1DisableOrganizationResponse": {
      "type": "object"
    },
    "v1beta1DisableProjectResponse": {
      "type": "object"
    },
    "v1beta1DisableUserResponse": {
      "type": "object"
    },
    "v1beta1EnableGroupResponse": {
      "type": "object"
    },
    "v1beta1EnableOrganizationResponse": {
      "type": "object"
    },
    "v1beta1EnableProjectResponse": {
      "type": "object"
    },
    "v1beta1EnableUserResponse": {
      "type": "object"
    },
    "v1beta1GetCurrentUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1beta1User"
        }
      }
    },
    "v1beta1GetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1beta1Group"
        }
      }
    },
    "v1beta1GetMetaSchemaResponse": {
      "type": "object",
      "properties": {
        "metaschema": {
          "$ref": "#/definitions/v1beta1MetaSchema"
        }
      }
    },
    "v1beta1GetNamespaceResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1GetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1beta1Organization"
        }
      }
    },
    "v1beta1GetOrganizationRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1beta1Role"
        }
      }
    },
    "v1beta1GetOrganizationsByCurrentUserResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Organization"
          }
        }
      }
    },
    "v1beta1GetOrganizationsByUserResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Organization"
          }
        }
      }
    },
    "v1beta1GetPermissionResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/v1beta1Permission"
        }
      }
    },
    "v1beta1GetPolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1beta1Policy"
        }
      }
    },
    "v1beta1GetProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1beta1Project"
        }
      }
    },
    "v1beta1GetRelationResponse": {
      "type": "object",
      "properties": {
        "relation": {
          "$ref": "#/definitions/v1beta1Relation"
        }
      }
    },
    "v1beta1GetResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1beta1Resource"
        }
      }
    },
    "v1beta1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1beta1User"
        }
      }
    },
    "v1beta1Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1GroupRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "orgId": {
          "type": "string"
        }
      }
    },
    "v1beta1ListAllOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Organization"
          }
        }
      }
    },
    "v1beta1ListAllUsersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListAuthStrategiesResponse": {
      "type": "object",
      "properties": {
        "strategies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1AuthStrategy"
          }
        }
      }
    },
    "v1beta1ListCurrentUserGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Group"
          }
        }
      }
    },
    "v1beta1ListGroupUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Group"
          }
        }
      }
    },
    "v1beta1ListMetaSchemasResponse": {
      "type": "object",
      "properties": {
        "metaschemas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1MetaSchema"
          }
        }
      }
    },
    "v1beta1ListNamespacesResponse": {
      "type": "object",
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Namespace"
          }
        }
      }
    },
    "v1beta1ListOrganizationAdminsResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListOrganizationGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Group"
          }
        }
      }
    },
    "v1beta1ListOrganizationProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Project"
          }
        }
      }
    },
    "v1beta1ListOrganizationRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Role"
          }
        }
      }
    },
    "v1beta1ListOrganizationUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Organization"
          }
        }
      }
    },
    "v1beta1ListPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Permission"
          }
        }
      }
    },
    "v1beta1ListPoliciesResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Policy"
          }
        }
      }
    },
    "v1beta1ListProjectAdminsResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListProjectResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Resource"
          }
        }
      }
    },
    "v1beta1ListProjectUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1ListProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Project"
          }
        }
      }
    },
    "v1beta1ListRelationsResponse": {
      "type": "object",
      "properties": {
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Relation"
          }
        }
      }
    },
    "v1beta1ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Resource"
          }
        }
      }
    },
    "v1beta1ListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Role"
          }
        }
      }
    },
    "v1beta1ListUserGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Group"
          }
        }
      }
    },
    "v1beta1ListUsersResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1User"
          }
        }
      }
    },
    "v1beta1MetaSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1MetaSchemaRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        }
      }
    },
    "v1beta1Namespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1NamespaceRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v1beta1Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1OrganizationRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1Permission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "namespaceId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "v1beta1PermissionRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "slug": {
          "type": "string",
          "title": "slug is optional and will be autogenerated with name and namespace_id"
        }
      }
    },
    "v1beta1Policy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "namespaceId": {
          "type": "string"
        },
        "roleId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1PolicyRequestBody": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "namespaceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1ProjectRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "orgId": {
          "type": "string"
        }
      }
    },
    "v1beta1Relation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        },
        "objectNamespace": {
          "type": "string"
        },
        "subjectId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "subjectNamespace": {
          "type": "string"
        },
        "subjectSubRelationName": {
          "type": "string"
        },
        "relationName": {
          "type": "string"
        }
      }
    },
    "v1beta1RelationRequestBody": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "objectNamespace": {
          "type": "string"
        },
        "subjectId": {
          "type": "string"
        },
        "relationName": {
          "type": "string"
        },
        "subjectNamespace": {
          "type": "string"
        },
        "subjectSubRelation": {
          "type": "string"
        }
      }
    },
    "v1beta1Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "urn": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "namespaceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1ResourceRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "namespaceId": {
          "type": "string"
        },
        "relations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Relation"
          }
        },
        "userId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "orgId": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "v1beta1RoleRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orgId": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "v1beta1UpdateCurrentUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1beta1User"
        }
      }
    },
    "v1beta1UpdateGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/v1beta1Group"
        }
      }
    },
    "v1beta1UpdateMetaSchemaResponse": {
      "type": "object",
      "properties": {
        "metaschema": {
          "$ref": "#/definitions/v1beta1MetaSchema"
        }
      }
    },
    "v1beta1UpdateNamespaceResponse": {
      "type": "object",
      "properties": {
        "namespace": {
          "$ref": "#/definitions/v1beta1Namespace"
        }
      }
    },
    "v1beta1UpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1beta1Organization"
        }
      }
    },
    "v1beta1UpdateOrganizationRoleResponse": {
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/v1beta1Role"
        }
      }
    },
    "v1beta1UpdatePermissionResponse": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/v1beta1Permission"
        }
      }
    },
    "v1beta1UpdatePolicyResponse": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Policy"
          }
        }
      }
    },
    "v1beta1UpdateProjectResponse": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1beta1Project"
        }
      }
    },
    "v1beta1UpdateResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1beta1Resource"
        }
      }
    },
    "v1beta1UpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1beta1User"
        }
      }
    },
    "v1beta1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string",
          "title": "can either be empty or must start with a character"
        },
        "email": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1beta1UserRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "slug": {
          "type": "string"
        }
      }
    }
  }
}
